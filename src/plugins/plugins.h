/* plugins.h generated by valac 0.28.1, the Vala compiler, do not modify */


#ifndef __PLUGINS_H__
#define __PLUGINS_H__

#include <glib.h>
#include <glib-object.h>
#include <synapse-core.h>
#include <gio/gio.h>
#include <stdlib.h>
#include <string.h>
#include <gtk/gtk.h>
#include <zeitgeist-datamodel.h>

G_BEGIN_DECLS


#define SYNAPSE_TYPE_BANSHEE_ACTIONS (synapse_banshee_actions_get_type ())
#define SYNAPSE_BANSHEE_ACTIONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_BANSHEE_ACTIONS, SynapseBansheeActions))
#define SYNAPSE_BANSHEE_ACTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_BANSHEE_ACTIONS, SynapseBansheeActionsClass))
#define SYNAPSE_IS_BANSHEE_ACTIONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_BANSHEE_ACTIONS))
#define SYNAPSE_IS_BANSHEE_ACTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_BANSHEE_ACTIONS))
#define SYNAPSE_BANSHEE_ACTIONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_BANSHEE_ACTIONS, SynapseBansheeActionsClass))

typedef struct _SynapseBansheeActions SynapseBansheeActions;
typedef struct _SynapseBansheeActionsClass SynapseBansheeActionsClass;
typedef struct _SynapseBansheeActionsPrivate SynapseBansheeActionsPrivate;

#define SYNAPSE_TYPE_CALCULATOR_PLUGIN (synapse_calculator_plugin_get_type ())
#define SYNAPSE_CALCULATOR_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_CALCULATOR_PLUGIN, SynapseCalculatorPlugin))
#define SYNAPSE_CALCULATOR_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_CALCULATOR_PLUGIN, SynapseCalculatorPluginClass))
#define SYNAPSE_IS_CALCULATOR_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_CALCULATOR_PLUGIN))
#define SYNAPSE_IS_CALCULATOR_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_CALCULATOR_PLUGIN))
#define SYNAPSE_CALCULATOR_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_CALCULATOR_PLUGIN, SynapseCalculatorPluginClass))

typedef struct _SynapseCalculatorPlugin SynapseCalculatorPlugin;
typedef struct _SynapseCalculatorPluginClass SynapseCalculatorPluginClass;
typedef struct _SynapseCalculatorPluginPrivate SynapseCalculatorPluginPrivate;

#define SYNAPSE_TYPE_CHAT_ACTIONS (synapse_chat_actions_get_type ())
#define SYNAPSE_CHAT_ACTIONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_CHAT_ACTIONS, SynapseChatActions))
#define SYNAPSE_CHAT_ACTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_CHAT_ACTIONS, SynapseChatActionsClass))
#define SYNAPSE_IS_CHAT_ACTIONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_CHAT_ACTIONS))
#define SYNAPSE_IS_CHAT_ACTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_CHAT_ACTIONS))
#define SYNAPSE_CHAT_ACTIONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_CHAT_ACTIONS, SynapseChatActionsClass))

typedef struct _SynapseChatActions SynapseChatActions;
typedef struct _SynapseChatActionsClass SynapseChatActionsClass;
typedef struct _SynapseChatActionsPrivate SynapseChatActionsPrivate;

#define SYNAPSE_TYPE_CHROMIUM_PLUGIN (synapse_chromium_plugin_get_type ())
#define SYNAPSE_CHROMIUM_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_CHROMIUM_PLUGIN, SynapseChromiumPlugin))
#define SYNAPSE_CHROMIUM_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_CHROMIUM_PLUGIN, SynapseChromiumPluginClass))
#define SYNAPSE_IS_CHROMIUM_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_CHROMIUM_PLUGIN))
#define SYNAPSE_IS_CHROMIUM_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_CHROMIUM_PLUGIN))
#define SYNAPSE_CHROMIUM_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_CHROMIUM_PLUGIN, SynapseChromiumPluginClass))

typedef struct _SynapseChromiumPlugin SynapseChromiumPlugin;
typedef struct _SynapseChromiumPluginClass SynapseChromiumPluginClass;
typedef struct _SynapseChromiumPluginPrivate SynapseChromiumPluginPrivate;

#define SYNAPSE_TYPE_COMMAND_PLUGIN (synapse_command_plugin_get_type ())
#define SYNAPSE_COMMAND_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_COMMAND_PLUGIN, SynapseCommandPlugin))
#define SYNAPSE_COMMAND_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_COMMAND_PLUGIN, SynapseCommandPluginClass))
#define SYNAPSE_IS_COMMAND_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_COMMAND_PLUGIN))
#define SYNAPSE_IS_COMMAND_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_COMMAND_PLUGIN))
#define SYNAPSE_COMMAND_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_COMMAND_PLUGIN, SynapseCommandPluginClass))

typedef struct _SynapseCommandPlugin SynapseCommandPlugin;
typedef struct _SynapseCommandPluginClass SynapseCommandPluginClass;
typedef struct _SynapseCommandPluginPrivate SynapseCommandPluginPrivate;

#define SYNAPSE_TYPE_FILE_OP_PLUGIN (synapse_file_op_plugin_get_type ())
#define SYNAPSE_FILE_OP_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_FILE_OP_PLUGIN, SynapseFileOpPlugin))
#define SYNAPSE_FILE_OP_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_FILE_OP_PLUGIN, SynapseFileOpPluginClass))
#define SYNAPSE_IS_FILE_OP_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_FILE_OP_PLUGIN))
#define SYNAPSE_IS_FILE_OP_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_FILE_OP_PLUGIN))
#define SYNAPSE_FILE_OP_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_FILE_OP_PLUGIN, SynapseFileOpPluginClass))

typedef struct _SynapseFileOpPlugin SynapseFileOpPlugin;
typedef struct _SynapseFileOpPluginClass SynapseFileOpPluginClass;
typedef struct _SynapseFileOpPluginPrivate SynapseFileOpPluginPrivate;

#define SYNAPSE_TYPE_DESKTOP_FILE_PLUGIN (synapse_desktop_file_plugin_get_type ())
#define SYNAPSE_DESKTOP_FILE_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_DESKTOP_FILE_PLUGIN, SynapseDesktopFilePlugin))
#define SYNAPSE_DESKTOP_FILE_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_DESKTOP_FILE_PLUGIN, SynapseDesktopFilePluginClass))
#define SYNAPSE_IS_DESKTOP_FILE_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_DESKTOP_FILE_PLUGIN))
#define SYNAPSE_IS_DESKTOP_FILE_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_DESKTOP_FILE_PLUGIN))
#define SYNAPSE_DESKTOP_FILE_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_DESKTOP_FILE_PLUGIN, SynapseDesktopFilePluginClass))

typedef struct _SynapseDesktopFilePlugin SynapseDesktopFilePlugin;
typedef struct _SynapseDesktopFilePluginClass SynapseDesktopFilePluginClass;
typedef struct _SynapseDesktopFilePluginPrivate SynapseDesktopFilePluginPrivate;

#define SYNAPSE_TYPE_DEVHELP_PLUGIN (synapse_devhelp_plugin_get_type ())
#define SYNAPSE_DEVHELP_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_DEVHELP_PLUGIN, SynapseDevhelpPlugin))
#define SYNAPSE_DEVHELP_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_DEVHELP_PLUGIN, SynapseDevhelpPluginClass))
#define SYNAPSE_IS_DEVHELP_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_DEVHELP_PLUGIN))
#define SYNAPSE_IS_DEVHELP_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_DEVHELP_PLUGIN))
#define SYNAPSE_DEVHELP_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_DEVHELP_PLUGIN, SynapseDevhelpPluginClass))

typedef struct _SynapseDevhelpPlugin SynapseDevhelpPlugin;
typedef struct _SynapseDevhelpPluginClass SynapseDevhelpPluginClass;
typedef struct _SynapseDevhelpPluginPrivate SynapseDevhelpPluginPrivate;

#define SYNAPSE_TYPE_SSH_PLUGIN (synapse_ssh_plugin_get_type ())
#define SYNAPSE_SSH_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_SSH_PLUGIN, SynapseSshPlugin))
#define SYNAPSE_SSH_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_SSH_PLUGIN, SynapseSshPluginClass))
#define SYNAPSE_IS_SSH_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_SSH_PLUGIN))
#define SYNAPSE_IS_SSH_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_SSH_PLUGIN))
#define SYNAPSE_SSH_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_SSH_PLUGIN, SynapseSshPluginClass))

typedef struct _SynapseSshPlugin SynapseSshPlugin;
typedef struct _SynapseSshPluginClass SynapseSshPluginClass;
typedef struct _SynapseSshPluginPrivate SynapseSshPluginPrivate;

#define SYNAPSE_TYPE_DICTIONARY_PLUGIN (synapse_dictionary_plugin_get_type ())
#define SYNAPSE_DICTIONARY_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_DICTIONARY_PLUGIN, SynapseDictionaryPlugin))
#define SYNAPSE_DICTIONARY_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_DICTIONARY_PLUGIN, SynapseDictionaryPluginClass))
#define SYNAPSE_IS_DICTIONARY_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_DICTIONARY_PLUGIN))
#define SYNAPSE_IS_DICTIONARY_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_DICTIONARY_PLUGIN))
#define SYNAPSE_DICTIONARY_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_DICTIONARY_PLUGIN, SynapseDictionaryPluginClass))

typedef struct _SynapseDictionaryPlugin SynapseDictionaryPlugin;
typedef struct _SynapseDictionaryPluginClass SynapseDictionaryPluginClass;
typedef struct _SynapseDictionaryPluginPrivate SynapseDictionaryPluginPrivate;

#define SYNAPSE_TYPE_DIRECTORY_PLUGIN (synapse_directory_plugin_get_type ())
#define SYNAPSE_DIRECTORY_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_DIRECTORY_PLUGIN, SynapseDirectoryPlugin))
#define SYNAPSE_DIRECTORY_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_DIRECTORY_PLUGIN, SynapseDirectoryPluginClass))
#define SYNAPSE_IS_DIRECTORY_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_DIRECTORY_PLUGIN))
#define SYNAPSE_IS_DIRECTORY_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_DIRECTORY_PLUGIN))
#define SYNAPSE_DIRECTORY_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_DIRECTORY_PLUGIN, SynapseDirectoryPluginClass))

typedef struct _SynapseDirectoryPlugin SynapseDirectoryPlugin;
typedef struct _SynapseDirectoryPluginClass SynapseDirectoryPluginClass;
typedef struct _SynapseDirectoryPluginPrivate SynapseDirectoryPluginPrivate;

#define SYNAPSE_TYPE_GNOME_BOOKMARKS_PLUGIN (synapse_gnome_bookmarks_plugin_get_type ())
#define SYNAPSE_GNOME_BOOKMARKS_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_GNOME_BOOKMARKS_PLUGIN, SynapseGnomeBookmarksPlugin))
#define SYNAPSE_GNOME_BOOKMARKS_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_GNOME_BOOKMARKS_PLUGIN, SynapseGnomeBookmarksPluginClass))
#define SYNAPSE_IS_GNOME_BOOKMARKS_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_GNOME_BOOKMARKS_PLUGIN))
#define SYNAPSE_IS_GNOME_BOOKMARKS_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_GNOME_BOOKMARKS_PLUGIN))
#define SYNAPSE_GNOME_BOOKMARKS_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_GNOME_BOOKMARKS_PLUGIN, SynapseGnomeBookmarksPluginClass))

typedef struct _SynapseGnomeBookmarksPlugin SynapseGnomeBookmarksPlugin;
typedef struct _SynapseGnomeBookmarksPluginClass SynapseGnomeBookmarksPluginClass;
typedef struct _SynapseGnomeBookmarksPluginPrivate SynapseGnomeBookmarksPluginPrivate;

#define SYNAPSE_TYPE_GNOME_SESSION_MANAGER (synapse_gnome_session_manager_get_type ())
#define SYNAPSE_GNOME_SESSION_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_GNOME_SESSION_MANAGER, SynapseGnomeSessionManager))
#define SYNAPSE_IS_GNOME_SESSION_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_GNOME_SESSION_MANAGER))
#define SYNAPSE_GNOME_SESSION_MANAGER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYNAPSE_TYPE_GNOME_SESSION_MANAGER, SynapseGnomeSessionManagerIface))

typedef struct _SynapseGnomeSessionManager SynapseGnomeSessionManager;
typedef struct _SynapseGnomeSessionManagerIface SynapseGnomeSessionManagerIface;

#define SYNAPSE_TYPE_GNOME_SESSION_MANAGER_PROXY (synapse_gnome_session_manager_proxy_get_type ())

#define SYNAPSE_TYPE_GNOME_SESSION_PLUGIN (synapse_gnome_session_plugin_get_type ())
#define SYNAPSE_GNOME_SESSION_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_GNOME_SESSION_PLUGIN, SynapseGnomeSessionPlugin))
#define SYNAPSE_GNOME_SESSION_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_GNOME_SESSION_PLUGIN, SynapseGnomeSessionPluginClass))
#define SYNAPSE_IS_GNOME_SESSION_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_GNOME_SESSION_PLUGIN))
#define SYNAPSE_IS_GNOME_SESSION_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_GNOME_SESSION_PLUGIN))
#define SYNAPSE_GNOME_SESSION_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_GNOME_SESSION_PLUGIN, SynapseGnomeSessionPluginClass))

typedef struct _SynapseGnomeSessionPlugin SynapseGnomeSessionPlugin;
typedef struct _SynapseGnomeSessionPluginClass SynapseGnomeSessionPluginClass;
typedef struct _SynapseGnomeSessionPluginPrivate SynapseGnomeSessionPluginPrivate;

#define SYNAPSE_TYPE_GNOME_SCREEN_SAVER (synapse_gnome_screen_saver_get_type ())
#define SYNAPSE_GNOME_SCREEN_SAVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_GNOME_SCREEN_SAVER, SynapseGnomeScreenSaver))
#define SYNAPSE_IS_GNOME_SCREEN_SAVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_GNOME_SCREEN_SAVER))
#define SYNAPSE_GNOME_SCREEN_SAVER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYNAPSE_TYPE_GNOME_SCREEN_SAVER, SynapseGnomeScreenSaverIface))

typedef struct _SynapseGnomeScreenSaver SynapseGnomeScreenSaver;
typedef struct _SynapseGnomeScreenSaverIface SynapseGnomeScreenSaverIface;

#define SYNAPSE_TYPE_GNOME_SCREEN_SAVER_PROXY (synapse_gnome_screen_saver_proxy_get_type ())

#define SYNAPSE_TYPE_GNOME_SCREEN_SAVER_PLUGIN (synapse_gnome_screen_saver_plugin_get_type ())
#define SYNAPSE_GNOME_SCREEN_SAVER_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_GNOME_SCREEN_SAVER_PLUGIN, SynapseGnomeScreenSaverPlugin))
#define SYNAPSE_GNOME_SCREEN_SAVER_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_GNOME_SCREEN_SAVER_PLUGIN, SynapseGnomeScreenSaverPluginClass))
#define SYNAPSE_IS_GNOME_SCREEN_SAVER_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_GNOME_SCREEN_SAVER_PLUGIN))
#define SYNAPSE_IS_GNOME_SCREEN_SAVER_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_GNOME_SCREEN_SAVER_PLUGIN))
#define SYNAPSE_GNOME_SCREEN_SAVER_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_GNOME_SCREEN_SAVER_PLUGIN, SynapseGnomeScreenSaverPluginClass))

typedef struct _SynapseGnomeScreenSaverPlugin SynapseGnomeScreenSaverPlugin;
typedef struct _SynapseGnomeScreenSaverPluginClass SynapseGnomeScreenSaverPluginClass;
typedef struct _SynapseGnomeScreenSaverPluginPrivate SynapseGnomeScreenSaverPluginPrivate;

#define SYNAPSE_TYPE_HELLO_WORLD_PLUGIN (synapse_hello_world_plugin_get_type ())
#define SYNAPSE_HELLO_WORLD_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_HELLO_WORLD_PLUGIN, SynapseHelloWorldPlugin))
#define SYNAPSE_HELLO_WORLD_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_HELLO_WORLD_PLUGIN, SynapseHelloWorldPluginClass))
#define SYNAPSE_IS_HELLO_WORLD_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_HELLO_WORLD_PLUGIN))
#define SYNAPSE_IS_HELLO_WORLD_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_HELLO_WORLD_PLUGIN))
#define SYNAPSE_HELLO_WORLD_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_HELLO_WORLD_PLUGIN, SynapseHelloWorldPluginClass))

typedef struct _SynapseHelloWorldPlugin SynapseHelloWorldPlugin;
typedef struct _SynapseHelloWorldPluginClass SynapseHelloWorldPluginClass;
typedef struct _SynapseHelloWorldPluginPrivate SynapseHelloWorldPluginPrivate;

#define SYNAPSE_TYPE_HYBRID_SEARCH_PLUGIN (synapse_hybrid_search_plugin_get_type ())
#define SYNAPSE_HYBRID_SEARCH_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_HYBRID_SEARCH_PLUGIN, SynapseHybridSearchPlugin))
#define SYNAPSE_HYBRID_SEARCH_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_HYBRID_SEARCH_PLUGIN, SynapseHybridSearchPluginClass))
#define SYNAPSE_IS_HYBRID_SEARCH_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_HYBRID_SEARCH_PLUGIN))
#define SYNAPSE_IS_HYBRID_SEARCH_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_HYBRID_SEARCH_PLUGIN))
#define SYNAPSE_HYBRID_SEARCH_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_HYBRID_SEARCH_PLUGIN, SynapseHybridSearchPluginClass))

typedef struct _SynapseHybridSearchPlugin SynapseHybridSearchPlugin;
typedef struct _SynapseHybridSearchPluginClass SynapseHybridSearchPluginClass;
typedef struct _SynapseHybridSearchPluginPrivate SynapseHybridSearchPluginPrivate;

#define SYNAPSE_TYPE_LAUNCHPAD_PLUGIN (synapse_launchpad_plugin_get_type ())
#define SYNAPSE_LAUNCHPAD_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_LAUNCHPAD_PLUGIN, SynapseLaunchpadPlugin))
#define SYNAPSE_LAUNCHPAD_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_LAUNCHPAD_PLUGIN, SynapseLaunchpadPluginClass))
#define SYNAPSE_IS_LAUNCHPAD_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_LAUNCHPAD_PLUGIN))
#define SYNAPSE_IS_LAUNCHPAD_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_LAUNCHPAD_PLUGIN))
#define SYNAPSE_LAUNCHPAD_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_LAUNCHPAD_PLUGIN, SynapseLaunchpadPluginClass))

typedef struct _SynapseLaunchpadPlugin SynapseLaunchpadPlugin;
typedef struct _SynapseLaunchpadPluginClass SynapseLaunchpadPluginClass;
typedef struct _SynapseLaunchpadPluginPrivate SynapseLaunchpadPluginPrivate;

#define SYNAPSE_TYPE_LOCATE_PLUGIN (synapse_locate_plugin_get_type ())
#define SYNAPSE_LOCATE_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_LOCATE_PLUGIN, SynapseLocatePlugin))
#define SYNAPSE_LOCATE_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_LOCATE_PLUGIN, SynapseLocatePluginClass))
#define SYNAPSE_IS_LOCATE_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_LOCATE_PLUGIN))
#define SYNAPSE_IS_LOCATE_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_LOCATE_PLUGIN))
#define SYNAPSE_LOCATE_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_LOCATE_PLUGIN, SynapseLocatePluginClass))

typedef struct _SynapseLocatePlugin SynapseLocatePlugin;
typedef struct _SynapseLocatePluginClass SynapseLocatePluginClass;
typedef struct _SynapseLocatePluginPrivate SynapseLocatePluginPrivate;

#define SYNAPSE_TYPE_OPEN_SEARCH_PLUGIN (synapse_open_search_plugin_get_type ())
#define SYNAPSE_OPEN_SEARCH_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_OPEN_SEARCH_PLUGIN, SynapseOpenSearchPlugin))
#define SYNAPSE_OPEN_SEARCH_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_OPEN_SEARCH_PLUGIN, SynapseOpenSearchPluginClass))
#define SYNAPSE_IS_OPEN_SEARCH_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_OPEN_SEARCH_PLUGIN))
#define SYNAPSE_IS_OPEN_SEARCH_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_OPEN_SEARCH_PLUGIN))
#define SYNAPSE_OPEN_SEARCH_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_OPEN_SEARCH_PLUGIN, SynapseOpenSearchPluginClass))

typedef struct _SynapseOpenSearchPlugin SynapseOpenSearchPlugin;
typedef struct _SynapseOpenSearchPluginClass SynapseOpenSearchPluginClass;
typedef struct _SynapseOpenSearchPluginPrivate SynapseOpenSearchPluginPrivate;

#define SYNAPSE_TYPE_PASTEBIN_PLUGIN (synapse_pastebin_plugin_get_type ())
#define SYNAPSE_PASTEBIN_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_PASTEBIN_PLUGIN, SynapsePastebinPlugin))
#define SYNAPSE_PASTEBIN_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_PASTEBIN_PLUGIN, SynapsePastebinPluginClass))
#define SYNAPSE_IS_PASTEBIN_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_PASTEBIN_PLUGIN))
#define SYNAPSE_IS_PASTEBIN_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_PASTEBIN_PLUGIN))
#define SYNAPSE_PASTEBIN_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_PASTEBIN_PLUGIN, SynapsePastebinPluginClass))

typedef struct _SynapsePastebinPlugin SynapsePastebinPlugin;
typedef struct _SynapsePastebinPluginClass SynapsePastebinPluginClass;
typedef struct _SynapsePastebinPluginPrivate SynapsePastebinPluginPrivate;

#define SYNAPSE_TYPE_PIDGIN_PLUGIN (synapse_pidgin_plugin_get_type ())
#define SYNAPSE_PIDGIN_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_PIDGIN_PLUGIN, SynapsePidginPlugin))
#define SYNAPSE_PIDGIN_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_PIDGIN_PLUGIN, SynapsePidginPluginClass))
#define SYNAPSE_IS_PIDGIN_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_PIDGIN_PLUGIN))
#define SYNAPSE_IS_PIDGIN_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_PIDGIN_PLUGIN))
#define SYNAPSE_PIDGIN_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_PIDGIN_PLUGIN, SynapsePidginPluginClass))

typedef struct _SynapsePidginPlugin SynapsePidginPlugin;
typedef struct _SynapsePidginPluginClass SynapsePidginPluginClass;
typedef struct _SynapsePidginPluginPrivate SynapsePidginPluginPrivate;

#define SYNAPSE_TYPE_RHYTHMBOX_ACTIONS (synapse_rhythmbox_actions_get_type ())
#define SYNAPSE_RHYTHMBOX_ACTIONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_RHYTHMBOX_ACTIONS, SynapseRhythmboxActions))
#define SYNAPSE_RHYTHMBOX_ACTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_RHYTHMBOX_ACTIONS, SynapseRhythmboxActionsClass))
#define SYNAPSE_IS_RHYTHMBOX_ACTIONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_RHYTHMBOX_ACTIONS))
#define SYNAPSE_IS_RHYTHMBOX_ACTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_RHYTHMBOX_ACTIONS))
#define SYNAPSE_RHYTHMBOX_ACTIONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_RHYTHMBOX_ACTIONS, SynapseRhythmboxActionsClass))

typedef struct _SynapseRhythmboxActions SynapseRhythmboxActions;
typedef struct _SynapseRhythmboxActionsClass SynapseRhythmboxActionsClass;
typedef struct _SynapseRhythmboxActionsPrivate SynapseRhythmboxActionsPrivate;

#define SYNAPSE_TYPE_SELECTION_PLUGIN (synapse_selection_plugin_get_type ())
#define SYNAPSE_SELECTION_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_SELECTION_PLUGIN, SynapseSelectionPlugin))
#define SYNAPSE_SELECTION_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_SELECTION_PLUGIN, SynapseSelectionPluginClass))
#define SYNAPSE_IS_SELECTION_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_SELECTION_PLUGIN))
#define SYNAPSE_IS_SELECTION_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_SELECTION_PLUGIN))
#define SYNAPSE_SELECTION_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_SELECTION_PLUGIN, SynapseSelectionPluginClass))

typedef struct _SynapseSelectionPlugin SynapseSelectionPlugin;
typedef struct _SynapseSelectionPluginClass SynapseSelectionPluginClass;
typedef struct _SynapseSelectionPluginPrivate SynapseSelectionPluginPrivate;

#define SYNAPSE_TYPE_TEST_SLOW_PLUGIN (synapse_test_slow_plugin_get_type ())
#define SYNAPSE_TEST_SLOW_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_TEST_SLOW_PLUGIN, SynapseTestSlowPlugin))
#define SYNAPSE_TEST_SLOW_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_TEST_SLOW_PLUGIN, SynapseTestSlowPluginClass))
#define SYNAPSE_IS_TEST_SLOW_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_TEST_SLOW_PLUGIN))
#define SYNAPSE_IS_TEST_SLOW_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_TEST_SLOW_PLUGIN))
#define SYNAPSE_TEST_SLOW_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_TEST_SLOW_PLUGIN, SynapseTestSlowPluginClass))

typedef struct _SynapseTestSlowPlugin SynapseTestSlowPlugin;
typedef struct _SynapseTestSlowPluginClass SynapseTestSlowPluginClass;
typedef struct _SynapseTestSlowPluginPrivate SynapseTestSlowPluginPrivate;

#define SYNAPSE_TYPE_XNOISE_ACTIONS (synapse_xnoise_actions_get_type ())
#define SYNAPSE_XNOISE_ACTIONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_XNOISE_ACTIONS, SynapseXnoiseActions))
#define SYNAPSE_XNOISE_ACTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_XNOISE_ACTIONS, SynapseXnoiseActionsClass))
#define SYNAPSE_IS_XNOISE_ACTIONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_XNOISE_ACTIONS))
#define SYNAPSE_IS_XNOISE_ACTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_XNOISE_ACTIONS))
#define SYNAPSE_XNOISE_ACTIONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_XNOISE_ACTIONS, SynapseXnoiseActionsClass))

typedef struct _SynapseXnoiseActions SynapseXnoiseActions;
typedef struct _SynapseXnoiseActionsClass SynapseXnoiseActionsClass;
typedef struct _SynapseXnoiseActionsPrivate SynapseXnoiseActionsPrivate;

#define SYNAPSE_TYPE_UPOWER_OBJECT (synapse_upower_object_get_type ())
#define SYNAPSE_UPOWER_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_UPOWER_OBJECT, SynapseUPowerObject))
#define SYNAPSE_IS_UPOWER_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_UPOWER_OBJECT))
#define SYNAPSE_UPOWER_OBJECT_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYNAPSE_TYPE_UPOWER_OBJECT, SynapseUPowerObjectIface))

typedef struct _SynapseUPowerObject SynapseUPowerObject;
typedef struct _SynapseUPowerObjectIface SynapseUPowerObjectIface;

#define SYNAPSE_TYPE_UPOWER_OBJECT_PROXY (synapse_upower_object_proxy_get_type ())

#define SYNAPSE_TYPE_CONSOLE_KIT_OBJECT (synapse_console_kit_object_get_type ())
#define SYNAPSE_CONSOLE_KIT_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_CONSOLE_KIT_OBJECT, SynapseConsoleKitObject))
#define SYNAPSE_IS_CONSOLE_KIT_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_CONSOLE_KIT_OBJECT))
#define SYNAPSE_CONSOLE_KIT_OBJECT_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYNAPSE_TYPE_CONSOLE_KIT_OBJECT, SynapseConsoleKitObjectIface))

typedef struct _SynapseConsoleKitObject SynapseConsoleKitObject;
typedef struct _SynapseConsoleKitObjectIface SynapseConsoleKitObjectIface;

#define SYNAPSE_TYPE_CONSOLE_KIT_OBJECT_PROXY (synapse_console_kit_object_proxy_get_type ())

#define SYNAPSE_TYPE_SYSTEMD_OBJECT (synapse_systemd_object_get_type ())
#define SYNAPSE_SYSTEMD_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_SYSTEMD_OBJECT, SynapseSystemdObject))
#define SYNAPSE_IS_SYSTEMD_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_SYSTEMD_OBJECT))
#define SYNAPSE_SYSTEMD_OBJECT_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYNAPSE_TYPE_SYSTEMD_OBJECT, SynapseSystemdObjectIface))

typedef struct _SynapseSystemdObject SynapseSystemdObject;
typedef struct _SynapseSystemdObjectIface SynapseSystemdObjectIface;

#define SYNAPSE_TYPE_SYSTEMD_OBJECT_PROXY (synapse_systemd_object_proxy_get_type ())

#define SYNAPSE_TYPE_SYSTEM_MANAGEMENT_PLUGIN (synapse_system_management_plugin_get_type ())
#define SYNAPSE_SYSTEM_MANAGEMENT_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_SYSTEM_MANAGEMENT_PLUGIN, SynapseSystemManagementPlugin))
#define SYNAPSE_SYSTEM_MANAGEMENT_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_SYSTEM_MANAGEMENT_PLUGIN, SynapseSystemManagementPluginClass))
#define SYNAPSE_IS_SYSTEM_MANAGEMENT_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_SYSTEM_MANAGEMENT_PLUGIN))
#define SYNAPSE_IS_SYSTEM_MANAGEMENT_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_SYSTEM_MANAGEMENT_PLUGIN))
#define SYNAPSE_SYSTEM_MANAGEMENT_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_SYSTEM_MANAGEMENT_PLUGIN, SynapseSystemManagementPluginClass))

typedef struct _SynapseSystemManagementPlugin SynapseSystemManagementPlugin;
typedef struct _SynapseSystemManagementPluginClass SynapseSystemManagementPluginClass;
typedef struct _SynapseSystemManagementPluginPrivate SynapseSystemManagementPluginPrivate;

#define SYNAPSE_TYPE_ZEAL_PLUGIN (synapse_zeal_plugin_get_type ())
#define SYNAPSE_ZEAL_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_ZEAL_PLUGIN, SynapseZealPlugin))
#define SYNAPSE_ZEAL_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_ZEAL_PLUGIN, SynapseZealPluginClass))
#define SYNAPSE_IS_ZEAL_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_ZEAL_PLUGIN))
#define SYNAPSE_IS_ZEAL_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_ZEAL_PLUGIN))
#define SYNAPSE_ZEAL_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_ZEAL_PLUGIN, SynapseZealPluginClass))

typedef struct _SynapseZealPlugin SynapseZealPlugin;
typedef struct _SynapseZealPluginClass SynapseZealPluginClass;
typedef struct _SynapseZealPluginPrivate SynapseZealPluginPrivate;

#define SYNAPSE_TYPE_ZEAL_DOC (synapse_zeal_doc_get_type ())
#define SYNAPSE_ZEAL_DOC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_ZEAL_DOC, SynapseZealDoc))
#define SYNAPSE_ZEAL_DOC_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_ZEAL_DOC, SynapseZealDocClass))
#define SYNAPSE_IS_ZEAL_DOC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_ZEAL_DOC))
#define SYNAPSE_IS_ZEAL_DOC_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_ZEAL_DOC))
#define SYNAPSE_ZEAL_DOC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_ZEAL_DOC, SynapseZealDocClass))

typedef struct _SynapseZealDoc SynapseZealDoc;
typedef struct _SynapseZealDocClass SynapseZealDocClass;
typedef struct _SynapseZealDocPrivate SynapseZealDocPrivate;

#define SYNAPSE_TYPE_ZEITGEIST_PLUGIN (synapse_zeitgeist_plugin_get_type ())
#define SYNAPSE_ZEITGEIST_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_ZEITGEIST_PLUGIN, SynapseZeitgeistPlugin))
#define SYNAPSE_ZEITGEIST_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_ZEITGEIST_PLUGIN, SynapseZeitgeistPluginClass))
#define SYNAPSE_IS_ZEITGEIST_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_ZEITGEIST_PLUGIN))
#define SYNAPSE_IS_ZEITGEIST_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_ZEITGEIST_PLUGIN))
#define SYNAPSE_ZEITGEIST_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_ZEITGEIST_PLUGIN, SynapseZeitgeistPluginClass))

typedef struct _SynapseZeitgeistPlugin SynapseZeitgeistPlugin;
typedef struct _SynapseZeitgeistPluginClass SynapseZeitgeistPluginClass;
typedef struct _SynapseZeitgeistPluginPrivate SynapseZeitgeistPluginPrivate;

#define SYNAPSE_TYPE_ZEITGEIST_RELATED (synapse_zeitgeist_related_get_type ())
#define SYNAPSE_ZEITGEIST_RELATED(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYNAPSE_TYPE_ZEITGEIST_RELATED, SynapseZeitgeistRelated))
#define SYNAPSE_ZEITGEIST_RELATED_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYNAPSE_TYPE_ZEITGEIST_RELATED, SynapseZeitgeistRelatedClass))
#define SYNAPSE_IS_ZEITGEIST_RELATED(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYNAPSE_TYPE_ZEITGEIST_RELATED))
#define SYNAPSE_IS_ZEITGEIST_RELATED_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYNAPSE_TYPE_ZEITGEIST_RELATED))
#define SYNAPSE_ZEITGEIST_RELATED_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYNAPSE_TYPE_ZEITGEIST_RELATED, SynapseZeitgeistRelatedClass))

typedef struct _SynapseZeitgeistRelated SynapseZeitgeistRelated;
typedef struct _SynapseZeitgeistRelatedClass SynapseZeitgeistRelatedClass;
typedef struct _SynapseZeitgeistRelatedPrivate SynapseZeitgeistRelatedPrivate;

struct _SynapseBansheeActions {
	GObject parent_instance;
	SynapseBansheeActionsPrivate * priv;
};

struct _SynapseBansheeActionsClass {
	GObjectClass parent_class;
};

struct _SynapseCalculatorPlugin {
	GObject parent_instance;
	SynapseCalculatorPluginPrivate * priv;
};

struct _SynapseCalculatorPluginClass {
	GObjectClass parent_class;
};

struct _SynapseChatActions {
	GObject parent_instance;
	SynapseChatActionsPrivate * priv;
};

struct _SynapseChatActionsClass {
	GObjectClass parent_class;
};

struct _SynapseChromiumPlugin {
	GObject parent_instance;
	SynapseChromiumPluginPrivate * priv;
};

struct _SynapseChromiumPluginClass {
	GObjectClass parent_class;
};

struct _SynapseCommandPlugin {
	GObject parent_instance;
	SynapseCommandPluginPrivate * priv;
};

struct _SynapseCommandPluginClass {
	GObjectClass parent_class;
};

struct _SynapseFileOpPlugin {
	GObject parent_instance;
	SynapseFileOpPluginPrivate * priv;
};

struct _SynapseFileOpPluginClass {
	GObjectClass parent_class;
};

struct _SynapseDesktopFilePlugin {
	GObject parent_instance;
	SynapseDesktopFilePluginPrivate * priv;
};

struct _SynapseDesktopFilePluginClass {
	GObjectClass parent_class;
};

struct _SynapseDevhelpPlugin {
	GObject parent_instance;
	SynapseDevhelpPluginPrivate * priv;
};

struct _SynapseDevhelpPluginClass {
	GObjectClass parent_class;
};

struct _SynapseSshPlugin {
	GObject parent_instance;
	SynapseSshPluginPrivate * priv;
	GFile* config_file;
	GFileMonitor* monitor;
};

struct _SynapseSshPluginClass {
	GObjectClass parent_class;
};

struct _SynapseDictionaryPlugin {
	GObject parent_instance;
	SynapseDictionaryPluginPrivate * priv;
};

struct _SynapseDictionaryPluginClass {
	GObjectClass parent_class;
};

struct _SynapseDirectoryPlugin {
	GObject parent_instance;
	SynapseDirectoryPluginPrivate * priv;
};

struct _SynapseDirectoryPluginClass {
	GObjectClass parent_class;
};

struct _SynapseGnomeBookmarksPlugin {
	GObject parent_instance;
	SynapseGnomeBookmarksPluginPrivate * priv;
};

struct _SynapseGnomeBookmarksPluginClass {
	GObjectClass parent_class;
};

struct _SynapseGnomeSessionManagerIface {
	GTypeInterface parent_iface;
	gboolean (*can_shutdown) (SynapseGnomeSessionManager* self, GError** error);
	void (*shutdown) (SynapseGnomeSessionManager* self, GError** error);
	void (*request_reboot) (SynapseGnomeSessionManager* self, GError** error);
	void (*logout) (SynapseGnomeSessionManager* self, guint32 mode, GError** error);
};

struct _SynapseGnomeSessionPlugin {
	GObject parent_instance;
	SynapseGnomeSessionPluginPrivate * priv;
};

struct _SynapseGnomeSessionPluginClass {
	GObjectClass parent_class;
};

struct _SynapseGnomeScreenSaverIface {
	GTypeInterface parent_iface;
	void (*lock) (SynapseGnomeScreenSaver* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*lock_finish) (SynapseGnomeScreenSaver* self, GAsyncResult* _res_, GError** error);
};

struct _SynapseGnomeScreenSaverPlugin {
	GObject parent_instance;
	SynapseGnomeScreenSaverPluginPrivate * priv;
};

struct _SynapseGnomeScreenSaverPluginClass {
	GObjectClass parent_class;
};

struct _SynapseHelloWorldPlugin {
	GObject parent_instance;
	SynapseHelloWorldPluginPrivate * priv;
};

struct _SynapseHelloWorldPluginClass {
	GObjectClass parent_class;
};

struct _SynapseHybridSearchPlugin {
	GObject parent_instance;
	SynapseHybridSearchPluginPrivate * priv;
};

struct _SynapseHybridSearchPluginClass {
	GObjectClass parent_class;
};

struct _SynapseLaunchpadPlugin {
	GObject parent_instance;
	SynapseLaunchpadPluginPrivate * priv;
};

struct _SynapseLaunchpadPluginClass {
	GObjectClass parent_class;
};

struct _SynapseLocatePlugin {
	GObject parent_instance;
	SynapseLocatePluginPrivate * priv;
};

struct _SynapseLocatePluginClass {
	GObjectClass parent_class;
};

struct _SynapseOpenSearchPlugin {
	GObject parent_instance;
	SynapseOpenSearchPluginPrivate * priv;
};

struct _SynapseOpenSearchPluginClass {
	GObjectClass parent_class;
};

struct _SynapsePastebinPlugin {
	GObject parent_instance;
	SynapsePastebinPluginPrivate * priv;
};

struct _SynapsePastebinPluginClass {
	GObjectClass parent_class;
};

struct _SynapsePidginPlugin {
	GObject parent_instance;
	SynapsePidginPluginPrivate * priv;
};

struct _SynapsePidginPluginClass {
	GObjectClass parent_class;
};

struct _SynapseRhythmboxActions {
	GObject parent_instance;
	SynapseRhythmboxActionsPrivate * priv;
};

struct _SynapseRhythmboxActionsClass {
	GObjectClass parent_class;
};

struct _SynapseSelectionPlugin {
	GObject parent_instance;
	SynapseSelectionPluginPrivate * priv;
};

struct _SynapseSelectionPluginClass {
	GObjectClass parent_class;
};

struct _SynapseTestSlowPlugin {
	GObject parent_instance;
	SynapseTestSlowPluginPrivate * priv;
};

struct _SynapseTestSlowPluginClass {
	GObjectClass parent_class;
};

struct _SynapseXnoiseActions {
	GObject parent_instance;
	SynapseXnoiseActionsPrivate * priv;
};

struct _SynapseXnoiseActionsClass {
	GObjectClass parent_class;
};

struct _SynapseUPowerObjectIface {
	GTypeInterface parent_iface;
	void (*hibernate) (SynapseUPowerObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*hibernate_finish) (SynapseUPowerObject* self, GAsyncResult* _res_, GError** error);
	void (*suspend) (SynapseUPowerObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*suspend_finish) (SynapseUPowerObject* self, GAsyncResult* _res_, GError** error);
	void (*hibernate_allowed) (SynapseUPowerObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	gboolean (*hibernate_allowed_finish) (SynapseUPowerObject* self, GAsyncResult* _res_, GError** error);
	void (*suspend_allowed) (SynapseUPowerObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	gboolean (*suspend_allowed_finish) (SynapseUPowerObject* self, GAsyncResult* _res_, GError** error);
	void (*about_to_sleep) (SynapseUPowerObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*about_to_sleep_finish) (SynapseUPowerObject* self, GAsyncResult* _res_, GError** error);
};

struct _SynapseConsoleKitObjectIface {
	GTypeInterface parent_iface;
	void (*restart) (SynapseConsoleKitObject* self, GError** error);
	void (*stop) (SynapseConsoleKitObject* self, GError** error);
	void (*can_restart) (SynapseConsoleKitObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	gboolean (*can_restart_finish) (SynapseConsoleKitObject* self, GAsyncResult* _res_, GError** error);
	void (*can_stop) (SynapseConsoleKitObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	gboolean (*can_stop_finish) (SynapseConsoleKitObject* self, GAsyncResult* _res_, GError** error);
};

struct _SynapseSystemdObjectIface {
	GTypeInterface parent_iface;
	void (*reboot) (SynapseSystemdObject* self, gboolean interactive, GError** error);
	void (*suspend) (SynapseSystemdObject* self, gboolean interactive, GError** error);
	void (*hibernate) (SynapseSystemdObject* self, gboolean interactive, GError** error);
	void (*power_off) (SynapseSystemdObject* self, gboolean interactive, GError** error);
	gchar* (*can_suspend) (SynapseSystemdObject* self, GError** error);
	gchar* (*can_hibernate) (SynapseSystemdObject* self, GError** error);
	gchar* (*can_reboot) (SynapseSystemdObject* self, GError** error);
	gchar* (*can_power_off) (SynapseSystemdObject* self, GError** error);
};

struct _SynapseSystemManagementPlugin {
	GObject parent_instance;
	SynapseSystemManagementPluginPrivate * priv;
};

struct _SynapseSystemManagementPluginClass {
	GObjectClass parent_class;
};

struct _SynapseZealPlugin {
	GObject parent_instance;
	SynapseZealPluginPrivate * priv;
};

struct _SynapseZealPluginClass {
	GObjectClass parent_class;
};

struct _SynapseZealDoc {
	SynapseActionMatch parent_instance;
	SynapseZealDocPrivate * priv;
	gchar* scf_bundle_identifier;
	gchar* scf_bundle_name;
	GRegex* regex;
};

struct _SynapseZealDocClass {
	SynapseActionMatchClass parent_class;
};

struct _SynapseZeitgeistPlugin {
	GObject parent_instance;
	SynapseZeitgeistPluginPrivate * priv;
};

struct _SynapseZeitgeistPluginClass {
	GObjectClass parent_class;
};

struct _SynapseZeitgeistRelated {
	GObject parent_instance;
	SynapseZeitgeistRelatedPrivate * priv;
};

struct _SynapseZeitgeistRelatedClass {
	GObjectClass parent_class;
};


GType synapse_banshee_actions_get_type (void) G_GNUC_CONST;
SynapseBansheeActions* synapse_banshee_actions_new (void);
SynapseBansheeActions* synapse_banshee_actions_construct (GType object_type);
GType synapse_calculator_plugin_get_type (void) G_GNUC_CONST;
SynapseCalculatorPlugin* synapse_calculator_plugin_new (void);
SynapseCalculatorPlugin* synapse_calculator_plugin_construct (GType object_type);
GType synapse_chat_actions_get_type (void) G_GNUC_CONST;
SynapseChatActions* synapse_chat_actions_new (void);
SynapseChatActions* synapse_chat_actions_construct (GType object_type);
GType synapse_chromium_plugin_get_type (void) G_GNUC_CONST;
SynapseChromiumPlugin* synapse_chromium_plugin_new (void);
SynapseChromiumPlugin* synapse_chromium_plugin_construct (GType object_type);
GType synapse_command_plugin_get_type (void) G_GNUC_CONST;
SynapseCommandPlugin* synapse_command_plugin_new (void);
SynapseCommandPlugin* synapse_command_plugin_construct (GType object_type);
GType synapse_file_op_plugin_get_type (void) G_GNUC_CONST;
SynapseFileOpPlugin* synapse_file_op_plugin_new (void);
SynapseFileOpPlugin* synapse_file_op_plugin_construct (GType object_type);
GType synapse_desktop_file_plugin_get_type (void) G_GNUC_CONST;
SynapseDesktopFilePlugin* synapse_desktop_file_plugin_new (void);
SynapseDesktopFilePlugin* synapse_desktop_file_plugin_construct (GType object_type);
GType synapse_devhelp_plugin_get_type (void) G_GNUC_CONST;
SynapseDevhelpPlugin* synapse_devhelp_plugin_new (void);
SynapseDevhelpPlugin* synapse_devhelp_plugin_construct (GType object_type);
GType synapse_ssh_plugin_get_type (void) G_GNUC_CONST;
void synapse_ssh_plugin_handle_ssh_config_update (SynapseSshPlugin* self, GFileMonitor* monitor, GFile* file, GFile* other_file, GFileMonitorEvent event_type);
SynapseSshPlugin* synapse_ssh_plugin_new (void);
SynapseSshPlugin* synapse_ssh_plugin_construct (GType object_type);
GType synapse_dictionary_plugin_get_type (void) G_GNUC_CONST;
SynapseDictionaryPlugin* synapse_dictionary_plugin_new (void);
SynapseDictionaryPlugin* synapse_dictionary_plugin_construct (GType object_type);
GType synapse_directory_plugin_get_type (void) G_GNUC_CONST;
SynapseDirectoryPlugin* synapse_directory_plugin_new (void);
SynapseDirectoryPlugin* synapse_directory_plugin_construct (GType object_type);
SynapseDataSink* synapse_directory_plugin_get_data_sink (SynapseDirectoryPlugin* self);
GType synapse_gnome_bookmarks_plugin_get_type (void) G_GNUC_CONST;
SynapseGnomeBookmarksPlugin* synapse_gnome_bookmarks_plugin_new (void);
SynapseGnomeBookmarksPlugin* synapse_gnome_bookmarks_plugin_construct (GType object_type);
GType synapse_gnome_session_manager_proxy_get_type (void) G_GNUC_CONST;
guint synapse_gnome_session_manager_register_object (void* object, GDBusConnection* connection, const gchar* path, GError** error);
GType synapse_gnome_session_manager_get_type (void) G_GNUC_CONST;
gboolean synapse_gnome_session_manager_can_shutdown (SynapseGnomeSessionManager* self, GError** error);
void synapse_gnome_session_manager_shutdown (SynapseGnomeSessionManager* self, GError** error);
void synapse_gnome_session_manager_request_reboot (SynapseGnomeSessionManager* self, GError** error);
void synapse_gnome_session_manager_logout (SynapseGnomeSessionManager* self, guint32 mode, GError** error);
#define SYNAPSE_GNOME_SESSION_MANAGER_UNIQUE_NAME "org.gnome.SessionManager"
#define SYNAPSE_GNOME_SESSION_MANAGER_OBJECT_PATH "/org/gnome/SessionManager"
GType synapse_gnome_session_plugin_get_type (void) G_GNUC_CONST;
SynapseGnomeSessionPlugin* synapse_gnome_session_plugin_new (void);
SynapseGnomeSessionPlugin* synapse_gnome_session_plugin_construct (GType object_type);
GType synapse_gnome_screen_saver_proxy_get_type (void) G_GNUC_CONST;
guint synapse_gnome_screen_saver_register_object (void* object, GDBusConnection* connection, const gchar* path, GError** error);
GType synapse_gnome_screen_saver_get_type (void) G_GNUC_CONST;
void synapse_gnome_screen_saver_lock (SynapseGnomeScreenSaver* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
void synapse_gnome_screen_saver_lock_finish (SynapseGnomeScreenSaver* self, GAsyncResult* _res_, GError** error);
#define SYNAPSE_GNOME_SCREEN_SAVER_UNIQUE_NAME "org.gnome.ScreenSaver"
#define SYNAPSE_GNOME_SCREEN_SAVER_OBJECT_PATH "/org/gnome/ScreenSaver"
GType synapse_gnome_screen_saver_plugin_get_type (void) G_GNUC_CONST;
void synapse_gnome_screen_saver_plugin_lock_screen (void);
SynapseGnomeScreenSaverPlugin* synapse_gnome_screen_saver_plugin_new (void);
SynapseGnomeScreenSaverPlugin* synapse_gnome_screen_saver_plugin_construct (GType object_type);
GType synapse_hello_world_plugin_get_type (void) G_GNUC_CONST;
SynapseHelloWorldPlugin* synapse_hello_world_plugin_new (void);
SynapseHelloWorldPlugin* synapse_hello_world_plugin_construct (GType object_type);
GType synapse_hybrid_search_plugin_get_type (void) G_GNUC_CONST;
SynapseHybridSearchPlugin* synapse_hybrid_search_plugin_new (void);
SynapseHybridSearchPlugin* synapse_hybrid_search_plugin_construct (GType object_type);
SynapseDataSink* synapse_hybrid_search_plugin_get_data_sink (SynapseHybridSearchPlugin* self);
gboolean synapse_hybrid_search_plugin_get_processing_query (SynapseHybridSearchPlugin* self);
GType synapse_launchpad_plugin_get_type (void) G_GNUC_CONST;
GtkWidget* synapse_launchpad_plugin_create_config_widget (SynapseLaunchpadPlugin* self);
SynapseResultSet* synapse_launchpad_plugin_find_for_match (SynapseLaunchpadPlugin* self, SynapseQuery* query, SynapseMatch* match);
SynapseLaunchpadPlugin* synapse_launchpad_plugin_new (void);
SynapseLaunchpadPlugin* synapse_launchpad_plugin_construct (GType object_type);
GType synapse_locate_plugin_get_type (void) G_GNUC_CONST;
void synapse_locate_plugin_locate (SynapseLocatePlugin* self, SynapseQuery* q, GAsyncReadyCallback _callback_, gpointer _user_data_);
SynapseResultSet* synapse_locate_plugin_locate_finish (SynapseLocatePlugin* self, GAsyncResult* _res_, GError** error);
SynapseLocatePlugin* synapse_locate_plugin_new (void);
SynapseLocatePlugin* synapse_locate_plugin_construct (GType object_type);
GType synapse_open_search_plugin_get_type (void) G_GNUC_CONST;
SynapseOpenSearchPlugin* synapse_open_search_plugin_new (void);
SynapseOpenSearchPlugin* synapse_open_search_plugin_construct (GType object_type);
GType synapse_pastebin_plugin_get_type (void) G_GNUC_CONST;
SynapsePastebinPlugin* synapse_pastebin_plugin_new (void);
SynapsePastebinPlugin* synapse_pastebin_plugin_construct (GType object_type);
GType synapse_pidgin_plugin_get_type (void) G_GNUC_CONST;
SynapsePidginPlugin* synapse_pidgin_plugin_new (void);
SynapsePidginPlugin* synapse_pidgin_plugin_construct (GType object_type);
GType synapse_rhythmbox_actions_get_type (void) G_GNUC_CONST;
SynapseRhythmboxActions* synapse_rhythmbox_actions_new (void);
SynapseRhythmboxActions* synapse_rhythmbox_actions_construct (GType object_type);
GType synapse_selection_plugin_get_type (void) G_GNUC_CONST;
SynapseSelectionPlugin* synapse_selection_plugin_new (void);
SynapseSelectionPlugin* synapse_selection_plugin_construct (GType object_type);
GType synapse_test_slow_plugin_get_type (void) G_GNUC_CONST;
SynapseTestSlowPlugin* synapse_test_slow_plugin_new (void);
SynapseTestSlowPlugin* synapse_test_slow_plugin_construct (GType object_type);
GType synapse_xnoise_actions_get_type (void) G_GNUC_CONST;
SynapseXnoiseActions* synapse_xnoise_actions_new (void);
SynapseXnoiseActions* synapse_xnoise_actions_construct (GType object_type);
GType synapse_upower_object_proxy_get_type (void) G_GNUC_CONST;
guint synapse_upower_object_register_object (void* object, GDBusConnection* connection, const gchar* path, GError** error);
GType synapse_upower_object_get_type (void) G_GNUC_CONST;
void synapse_upower_object_hibernate (SynapseUPowerObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
void synapse_upower_object_hibernate_finish (SynapseUPowerObject* self, GAsyncResult* _res_, GError** error);
void synapse_upower_object_suspend (SynapseUPowerObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
void synapse_upower_object_suspend_finish (SynapseUPowerObject* self, GAsyncResult* _res_, GError** error);
void synapse_upower_object_hibernate_allowed (SynapseUPowerObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
gboolean synapse_upower_object_hibernate_allowed_finish (SynapseUPowerObject* self, GAsyncResult* _res_, GError** error);
void synapse_upower_object_suspend_allowed (SynapseUPowerObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
gboolean synapse_upower_object_suspend_allowed_finish (SynapseUPowerObject* self, GAsyncResult* _res_, GError** error);
void synapse_upower_object_about_to_sleep (SynapseUPowerObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
void synapse_upower_object_about_to_sleep_finish (SynapseUPowerObject* self, GAsyncResult* _res_, GError** error);
#define SYNAPSE_UPOWER_OBJECT_UNIQUE_NAME "org.freedesktop.UPower"
#define SYNAPSE_UPOWER_OBJECT_OBJECT_PATH "/org/freedesktop/UPower"
GType synapse_console_kit_object_proxy_get_type (void) G_GNUC_CONST;
guint synapse_console_kit_object_register_object (void* object, GDBusConnection* connection, const gchar* path, GError** error);
GType synapse_console_kit_object_get_type (void) G_GNUC_CONST;
void synapse_console_kit_object_restart (SynapseConsoleKitObject* self, GError** error);
void synapse_console_kit_object_stop (SynapseConsoleKitObject* self, GError** error);
void synapse_console_kit_object_can_restart (SynapseConsoleKitObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
gboolean synapse_console_kit_object_can_restart_finish (SynapseConsoleKitObject* self, GAsyncResult* _res_, GError** error);
void synapse_console_kit_object_can_stop (SynapseConsoleKitObject* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
gboolean synapse_console_kit_object_can_stop_finish (SynapseConsoleKitObject* self, GAsyncResult* _res_, GError** error);
#define SYNAPSE_CONSOLE_KIT_OBJECT_UNIQUE_NAME "org.freedesktop.ConsoleKit"
#define SYNAPSE_CONSOLE_KIT_OBJECT_OBJECT_PATH "/org/freedesktop/ConsoleKit/Manager"
GType synapse_systemd_object_proxy_get_type (void) G_GNUC_CONST;
guint synapse_systemd_object_register_object (void* object, GDBusConnection* connection, const gchar* path, GError** error);
GType synapse_systemd_object_get_type (void) G_GNUC_CONST;
void synapse_systemd_object_reboot (SynapseSystemdObject* self, gboolean interactive, GError** error);
void synapse_systemd_object_suspend (SynapseSystemdObject* self, gboolean interactive, GError** error);
void synapse_systemd_object_hibernate (SynapseSystemdObject* self, gboolean interactive, GError** error);
void synapse_systemd_object_power_off (SynapseSystemdObject* self, gboolean interactive, GError** error);
gchar* synapse_systemd_object_can_suspend (SynapseSystemdObject* self, GError** error);
gchar* synapse_systemd_object_can_hibernate (SynapseSystemdObject* self, GError** error);
gchar* synapse_systemd_object_can_reboot (SynapseSystemdObject* self, GError** error);
gchar* synapse_systemd_object_can_power_off (SynapseSystemdObject* self, GError** error);
#define SYNAPSE_SYSTEMD_OBJECT_UNIQUE_NAME "org.freedesktop.login1"
#define SYNAPSE_SYSTEMD_OBJECT_OBJECT_PATH "/org/freedesktop/login1"
GType synapse_system_management_plugin_get_type (void) G_GNUC_CONST;
SynapseSystemManagementPlugin* synapse_system_management_plugin_new (void);
SynapseSystemManagementPlugin* synapse_system_management_plugin_construct (GType object_type);
GType synapse_zeal_plugin_get_type (void) G_GNUC_CONST;
SynapseZealPlugin* synapse_zeal_plugin_new (void);
SynapseZealPlugin* synapse_zeal_plugin_construct (GType object_type);
GType synapse_zeal_doc_get_type (void) G_GNUC_CONST;
SynapseZealDoc* synapse_zeal_doc_new (const gchar* doc_path);
SynapseZealDoc* synapse_zeal_doc_construct (GType object_type, const gchar* doc_path);
void synapse_zeal_doc_update_title (SynapseZealDoc* self, const gchar* query);
gchar* synapse_zeal_doc_replace_first_occurence (const gchar* str, const gchar* search, const gchar* replace);
const gchar* synapse_zeal_doc_get_doc_path (SynapseZealDoc* self);
GType synapse_zeitgeist_plugin_get_type (void) G_GNUC_CONST;
void synapse_zeitgeist_plugin_process_results (const gchar* query, ZeitgeistResultSet* events, GCancellable* cancellable, SynapseResultSet* real_results, gboolean local_only, gboolean places_search, GAsyncReadyCallback _callback_, gpointer _user_data_);
void synapse_zeitgeist_plugin_process_results_finish (GAsyncResult* _res_);
GPtrArray* synapse_zeitgeist_plugin_create_templates (SynapseQueryFlags flags);
SynapseZeitgeistPlugin* synapse_zeitgeist_plugin_new (void);
SynapseZeitgeistPlugin* synapse_zeitgeist_plugin_construct (GType object_type);
SynapseDataSink* synapse_zeitgeist_plugin_get_data_sink (SynapseZeitgeistPlugin* self);
void synapse_zeitgeist_plugin_set_data_sink (SynapseZeitgeistPlugin* self, SynapseDataSink* value);
GType synapse_zeitgeist_related_get_type (void) G_GNUC_CONST;
void synapse_zeitgeist_related_find_related (SynapseZeitgeistRelated* self, SynapseQuery* q, SynapseMatch* m, GAsyncReadyCallback _callback_, gpointer _user_data_);
SynapseResultSet* synapse_zeitgeist_related_find_related_finish (SynapseZeitgeistRelated* self, GAsyncResult* _res_, GError** error);
SynapseZeitgeistRelated* synapse_zeitgeist_related_new (void);
SynapseZeitgeistRelated* synapse_zeitgeist_related_construct (GType object_type);


G_END_DECLS

#endif
