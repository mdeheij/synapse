# Makefile.in generated by automake 1.15 from Makefile.am.
# src/ui/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/synapse
pkgincludedir = $(includedir)/synapse
pkglibdir = $(libdir)/synapse
pkglibexecdir = $(libexecdir)/synapse
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = synapse$(EXEEXT)
#am__append_1 = $(APP_INDICATOR_VALAFLAGS)
#am__append_2 = $(APP_INDICATOR_CFLAGS)
#am__append_3 = $(APP_INDICATOR_LIBS)
#am__append_4 = $(REST_VALAFLAGS)
#am__append_5 = $(REST_CFLAGS)
#am__append_6 = $(REST_LIBS)
am__append_7 = $(ZEITGEIST_VALAFLAGS)
am__append_8 = $(ZEITGEIST_CFLAGS)
am__append_9 = $(ZEITGEIST_LIBS)
subdir = src/ui
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/intltool.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 =
am__objects_2 = synapse-synapse-main.$(OBJEXT) \
	synapse-keybindings.$(OBJEXT) synapse-category.$(OBJEXT) \
	synapse-interfaces.$(OBJEXT) synapse-controller.$(OBJEXT) \
	synapse-model.$(OBJEXT) synapse-view-base.$(OBJEXT) \
	synapse-view-default.$(OBJEXT) \
	synapse-view-essential.$(OBJEXT) synapse-view-doish.$(OBJEXT) \
	synapse-view-side-doish.$(OBJEXT) \
	synapse-view-virgilio.$(OBJEXT) synapse-widgets.$(OBJEXT) \
	synapse-widgets-matchlistview.$(OBJEXT) \
	synapse-icon-cache-service.$(OBJEXT) synapse-utils.$(OBJEXT) \
	synapse-settings.$(OBJEXT) \
	tile-view/synapse-abstract-tile-object.$(OBJEXT) \
	tile-view/synapse-tile.$(OBJEXT) \
	tile-view/synapse-tile-view.$(OBJEXT) \
	tile-view/synapse-wrap-label.$(OBJEXT) $(am__objects_1)
nodist_synapse_OBJECTS = $(am__objects_2) $(am__objects_1)
synapse_OBJECTS = $(nodist_synapse_OBJECTS)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
synapse_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/core/libsynapsecore.la \
	$(top_builddir)/src/plugins/libplugins.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
synapse_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(synapse_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(nodist_synapse_SOURCES)
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.common \
	$(top_srcdir)/build-aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/mdeheij/projects/src/github.com/mdeheij/synapse/synapse-project/build-aux/missing aclocal-1.15
ALL_LINGUAS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
APP_INDICATOR_CFLAGS = 
APP_INDICATOR_LIBS = 
APP_INDICATOR_VALAFLAGS = 
AR = ar
AUTOCONF = ${SHELL} /home/mdeheij/projects/src/github.com/mdeheij/synapse/synapse-project/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/mdeheij/projects/src/github.com/mdeheij/synapse/synapse-project/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/mdeheij/projects/src/github.com/mdeheij/synapse/synapse-project/build-aux/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GETTEXT_PACKAGE = synapse
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/mdeheij/projects/src/github.com/mdeheij/synapse/synapse-project/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = synapse
PACKAGE_BUGREPORT = 
PACKAGE_NAME = synapse
PACKAGE_STRING = synapse 0.2.99.1
PACKAGE_TARNAME = synapse
PACKAGE_URL = 
PACKAGE_VERSION = 0.2.99.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
REST_CFLAGS = 
REST_LIBS = 
REST_VALAFLAGS = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SYNAPSE_COMMON_VALAFLAGS =  --target-glib=2.40 --thread -g
SYNAPSE_MODULES_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/gee-0.8 -I/usr/include/json-glib-1.0 -I/usr/include/keybinder-3.0 -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/mirclient -I/usr/include/mircommon -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include 
SYNAPSE_MODULES_LIBS = -lgdk-3 -lgio-2.0 -lgthread-2.0 -pthread -lgee-0.8 -ljson-glib-1.0 -lkeybinder-3.0 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lnotify -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
SYNAPSE_MODULES_VALAFLAGS =  --pkg gdk-x11-3.0   --pkg gtk+-3.0   --pkg gio-2.0   --pkg gio-unix-2.0   --pkg gee-0.8   --pkg json-glib-1.0   --pkg keybinder-3.0   --pkg libnotify
USE_NLS = yes
VALAC = /usr/bin/valac
VERSION = 0.2.99.1
XGETTEXT = /usr/bin/xgettext
ZEITGEIST_CFLAGS = -pthread -I/usr/include/zeitgeist-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include 
ZEITGEIST_LIBS = -lzeitgeist-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
ZEITGEIST_VALAFLAGS =  --pkg zeitgeist-2.0 -D HAVE_ZEITGEIST
abs_builddir = /home/mdeheij/projects/src/github.com/mdeheij/synapse/synapse-project/src/ui
abs_srcdir = /home/mdeheij/projects/src/github.com/mdeheij/synapse/synapse-project/src/ui
abs_top_builddir = /home/mdeheij/projects/src/github.com/mdeheij/synapse/synapse-project
abs_top_srcdir = /home/mdeheij/projects/src/github.com/mdeheij/synapse/synapse-project
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/mdeheij/projects/src/github.com/mdeheij/synapse/synapse-project/build-aux/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/mdeheij/projects/src/github.com/mdeheij/synapse/synapse-project/dumptest
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
NULL = 
AM_V_VALA = $(am__v_VALA_$(V))
am__v_VALA_ = $(am__v_VALA_$(AM_DEFAULT_VERBOSITY))
am__v_VALA_0 = @echo "  VALAC " $@;
AM_CPPFLAGS = \
	-include $(CONFIG_HEADER) \
	-DDATADIR=\"$(datadir)\" \
	-DPKGDATADIR=\"$(pkgdatadir)\" \
	-DLIBDIR=\"$(libdir)\" \
	-DPKGLIBDIR=\"$(pkglibdir)\" \
	$(NULL)

VAPIDIR = $(top_srcdir)/vapi
synapse_VALAFLAGS = $(SYNAPSE_COMMON_VALAFLAGS) \
	$(SYNAPSE_MODULES_VALAFLAGS) --basedir $(srcdir) --directory \
	$(builddir) --vapidir $(top_builddir)/src/core --pkg \
	synapse-core --vapidir $(top_builddir)/src/plugins --pkg \
	plugins --vapidir $(VAPIDIR) $(VAPIDIR)/config.vapi $(NULL) \
	$(am__append_1) $(am__append_4) $(am__append_7)
synapse_CFLAGS = $(SYNAPSE_MODULES_CFLAGS) -include config.h -w \
	-I$(top_builddir)/src/core -I$(top_builddir)/src/plugins \
	$(NULL) $(am__append_2) $(am__append_5) $(am__append_8)
synapse_LDADD = $(SYNAPSE_MODULES_LIBS) \
	$(top_builddir)/src/core/libsynapsecore.la \
	$(top_builddir)/src/plugins/libplugins.la $(LIBM) $(NULL) \
	$(am__append_3) $(am__append_6) $(am__append_9)
synapse_VALASOURCES = \
	synapse-main.vala \
	keybindings.vala \
	category.vala \
	interfaces.vala \
	controller.vala \
	model.vala \
	view-base.vala \
	view-default.vala \
	view-essential.vala \
	view-doish.vala \
	view-side-doish.vala \
	view-virgilio.vala \
	widgets.vala \
	widgets-matchlistview.vala \
	icon-cache-service.vala \
	utils.vala \
	settings.vala \
	tile-view/abstract-tile-object.vala \
	tile-view/tile.vala \
	tile-view/tile-view.vala \
	tile-view/wrap-label.vala \
	$(NULL)

nodist_synapse_SOURCES = \
	$(synapse_VALASOURCES:.vala=.c) \
	$(NULL)

BUILT_SOURCES = \
	synapse.vala.stamp \
	$(NULL)

EXTRA_DIST = \
	$(synapse_VALASOURCES) \
	$(NULL)

CLEANFILES = \
	$(nodist_synapse_SOURCES) \
	synapse.vala.stamp \
	$(NULL)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/ui/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/ui/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.common $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
tile-view/$(am__dirstamp):
	@$(MKDIR_P) tile-view
	@: > tile-view/$(am__dirstamp)
tile-view/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tile-view/$(DEPDIR)
	@: > tile-view/$(DEPDIR)/$(am__dirstamp)
tile-view/synapse-abstract-tile-object.$(OBJEXT):  \
	tile-view/$(am__dirstamp) tile-view/$(DEPDIR)/$(am__dirstamp)
tile-view/synapse-tile.$(OBJEXT): tile-view/$(am__dirstamp) \
	tile-view/$(DEPDIR)/$(am__dirstamp)
tile-view/synapse-tile-view.$(OBJEXT): tile-view/$(am__dirstamp) \
	tile-view/$(DEPDIR)/$(am__dirstamp)
tile-view/synapse-wrap-label.$(OBJEXT): tile-view/$(am__dirstamp) \
	tile-view/$(DEPDIR)/$(am__dirstamp)

synapse$(EXEEXT): $(synapse_OBJECTS) $(synapse_DEPENDENCIES) $(EXTRA_synapse_DEPENDENCIES) 
	@rm -f synapse$(EXEEXT)
	$(AM_V_CCLD)$(synapse_LINK) $(synapse_OBJECTS) $(synapse_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f tile-view/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/synapse-category.Po
include ./$(DEPDIR)/synapse-controller.Po
include ./$(DEPDIR)/synapse-icon-cache-service.Po
include ./$(DEPDIR)/synapse-interfaces.Po
include ./$(DEPDIR)/synapse-keybindings.Po
include ./$(DEPDIR)/synapse-model.Po
include ./$(DEPDIR)/synapse-settings.Po
include ./$(DEPDIR)/synapse-synapse-main.Po
include ./$(DEPDIR)/synapse-utils.Po
include ./$(DEPDIR)/synapse-view-base.Po
include ./$(DEPDIR)/synapse-view-default.Po
include ./$(DEPDIR)/synapse-view-doish.Po
include ./$(DEPDIR)/synapse-view-essential.Po
include ./$(DEPDIR)/synapse-view-side-doish.Po
include ./$(DEPDIR)/synapse-view-virgilio.Po
include ./$(DEPDIR)/synapse-widgets-matchlistview.Po
include ./$(DEPDIR)/synapse-widgets.Po
include tile-view/$(DEPDIR)/synapse-abstract-tile-object.Po
include tile-view/$(DEPDIR)/synapse-tile-view.Po
include tile-view/$(DEPDIR)/synapse-tile.Po
include tile-view/$(DEPDIR)/synapse-wrap-label.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

synapse-synapse-main.o: synapse-main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-synapse-main.o -MD -MP -MF $(DEPDIR)/synapse-synapse-main.Tpo -c -o synapse-synapse-main.o `test -f 'synapse-main.c' || echo '$(srcdir)/'`synapse-main.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-synapse-main.Tpo $(DEPDIR)/synapse-synapse-main.Po
#	$(AM_V_CC)source='synapse-main.c' object='synapse-synapse-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-synapse-main.o `test -f 'synapse-main.c' || echo '$(srcdir)/'`synapse-main.c

synapse-synapse-main.obj: synapse-main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-synapse-main.obj -MD -MP -MF $(DEPDIR)/synapse-synapse-main.Tpo -c -o synapse-synapse-main.obj `if test -f 'synapse-main.c'; then $(CYGPATH_W) 'synapse-main.c'; else $(CYGPATH_W) '$(srcdir)/synapse-main.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-synapse-main.Tpo $(DEPDIR)/synapse-synapse-main.Po
#	$(AM_V_CC)source='synapse-main.c' object='synapse-synapse-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-synapse-main.obj `if test -f 'synapse-main.c'; then $(CYGPATH_W) 'synapse-main.c'; else $(CYGPATH_W) '$(srcdir)/synapse-main.c'; fi`

synapse-keybindings.o: keybindings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-keybindings.o -MD -MP -MF $(DEPDIR)/synapse-keybindings.Tpo -c -o synapse-keybindings.o `test -f 'keybindings.c' || echo '$(srcdir)/'`keybindings.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-keybindings.Tpo $(DEPDIR)/synapse-keybindings.Po
#	$(AM_V_CC)source='keybindings.c' object='synapse-keybindings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-keybindings.o `test -f 'keybindings.c' || echo '$(srcdir)/'`keybindings.c

synapse-keybindings.obj: keybindings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-keybindings.obj -MD -MP -MF $(DEPDIR)/synapse-keybindings.Tpo -c -o synapse-keybindings.obj `if test -f 'keybindings.c'; then $(CYGPATH_W) 'keybindings.c'; else $(CYGPATH_W) '$(srcdir)/keybindings.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-keybindings.Tpo $(DEPDIR)/synapse-keybindings.Po
#	$(AM_V_CC)source='keybindings.c' object='synapse-keybindings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-keybindings.obj `if test -f 'keybindings.c'; then $(CYGPATH_W) 'keybindings.c'; else $(CYGPATH_W) '$(srcdir)/keybindings.c'; fi`

synapse-category.o: category.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-category.o -MD -MP -MF $(DEPDIR)/synapse-category.Tpo -c -o synapse-category.o `test -f 'category.c' || echo '$(srcdir)/'`category.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-category.Tpo $(DEPDIR)/synapse-category.Po
#	$(AM_V_CC)source='category.c' object='synapse-category.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-category.o `test -f 'category.c' || echo '$(srcdir)/'`category.c

synapse-category.obj: category.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-category.obj -MD -MP -MF $(DEPDIR)/synapse-category.Tpo -c -o synapse-category.obj `if test -f 'category.c'; then $(CYGPATH_W) 'category.c'; else $(CYGPATH_W) '$(srcdir)/category.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-category.Tpo $(DEPDIR)/synapse-category.Po
#	$(AM_V_CC)source='category.c' object='synapse-category.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-category.obj `if test -f 'category.c'; then $(CYGPATH_W) 'category.c'; else $(CYGPATH_W) '$(srcdir)/category.c'; fi`

synapse-interfaces.o: interfaces.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-interfaces.o -MD -MP -MF $(DEPDIR)/synapse-interfaces.Tpo -c -o synapse-interfaces.o `test -f 'interfaces.c' || echo '$(srcdir)/'`interfaces.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-interfaces.Tpo $(DEPDIR)/synapse-interfaces.Po
#	$(AM_V_CC)source='interfaces.c' object='synapse-interfaces.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-interfaces.o `test -f 'interfaces.c' || echo '$(srcdir)/'`interfaces.c

synapse-interfaces.obj: interfaces.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-interfaces.obj -MD -MP -MF $(DEPDIR)/synapse-interfaces.Tpo -c -o synapse-interfaces.obj `if test -f 'interfaces.c'; then $(CYGPATH_W) 'interfaces.c'; else $(CYGPATH_W) '$(srcdir)/interfaces.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-interfaces.Tpo $(DEPDIR)/synapse-interfaces.Po
#	$(AM_V_CC)source='interfaces.c' object='synapse-interfaces.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-interfaces.obj `if test -f 'interfaces.c'; then $(CYGPATH_W) 'interfaces.c'; else $(CYGPATH_W) '$(srcdir)/interfaces.c'; fi`

synapse-controller.o: controller.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-controller.o -MD -MP -MF $(DEPDIR)/synapse-controller.Tpo -c -o synapse-controller.o `test -f 'controller.c' || echo '$(srcdir)/'`controller.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-controller.Tpo $(DEPDIR)/synapse-controller.Po
#	$(AM_V_CC)source='controller.c' object='synapse-controller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-controller.o `test -f 'controller.c' || echo '$(srcdir)/'`controller.c

synapse-controller.obj: controller.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-controller.obj -MD -MP -MF $(DEPDIR)/synapse-controller.Tpo -c -o synapse-controller.obj `if test -f 'controller.c'; then $(CYGPATH_W) 'controller.c'; else $(CYGPATH_W) '$(srcdir)/controller.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-controller.Tpo $(DEPDIR)/synapse-controller.Po
#	$(AM_V_CC)source='controller.c' object='synapse-controller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-controller.obj `if test -f 'controller.c'; then $(CYGPATH_W) 'controller.c'; else $(CYGPATH_W) '$(srcdir)/controller.c'; fi`

synapse-model.o: model.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-model.o -MD -MP -MF $(DEPDIR)/synapse-model.Tpo -c -o synapse-model.o `test -f 'model.c' || echo '$(srcdir)/'`model.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-model.Tpo $(DEPDIR)/synapse-model.Po
#	$(AM_V_CC)source='model.c' object='synapse-model.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-model.o `test -f 'model.c' || echo '$(srcdir)/'`model.c

synapse-model.obj: model.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-model.obj -MD -MP -MF $(DEPDIR)/synapse-model.Tpo -c -o synapse-model.obj `if test -f 'model.c'; then $(CYGPATH_W) 'model.c'; else $(CYGPATH_W) '$(srcdir)/model.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-model.Tpo $(DEPDIR)/synapse-model.Po
#	$(AM_V_CC)source='model.c' object='synapse-model.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-model.obj `if test -f 'model.c'; then $(CYGPATH_W) 'model.c'; else $(CYGPATH_W) '$(srcdir)/model.c'; fi`

synapse-view-base.o: view-base.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-base.o -MD -MP -MF $(DEPDIR)/synapse-view-base.Tpo -c -o synapse-view-base.o `test -f 'view-base.c' || echo '$(srcdir)/'`view-base.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-base.Tpo $(DEPDIR)/synapse-view-base.Po
#	$(AM_V_CC)source='view-base.c' object='synapse-view-base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-base.o `test -f 'view-base.c' || echo '$(srcdir)/'`view-base.c

synapse-view-base.obj: view-base.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-base.obj -MD -MP -MF $(DEPDIR)/synapse-view-base.Tpo -c -o synapse-view-base.obj `if test -f 'view-base.c'; then $(CYGPATH_W) 'view-base.c'; else $(CYGPATH_W) '$(srcdir)/view-base.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-base.Tpo $(DEPDIR)/synapse-view-base.Po
#	$(AM_V_CC)source='view-base.c' object='synapse-view-base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-base.obj `if test -f 'view-base.c'; then $(CYGPATH_W) 'view-base.c'; else $(CYGPATH_W) '$(srcdir)/view-base.c'; fi`

synapse-view-default.o: view-default.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-default.o -MD -MP -MF $(DEPDIR)/synapse-view-default.Tpo -c -o synapse-view-default.o `test -f 'view-default.c' || echo '$(srcdir)/'`view-default.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-default.Tpo $(DEPDIR)/synapse-view-default.Po
#	$(AM_V_CC)source='view-default.c' object='synapse-view-default.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-default.o `test -f 'view-default.c' || echo '$(srcdir)/'`view-default.c

synapse-view-default.obj: view-default.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-default.obj -MD -MP -MF $(DEPDIR)/synapse-view-default.Tpo -c -o synapse-view-default.obj `if test -f 'view-default.c'; then $(CYGPATH_W) 'view-default.c'; else $(CYGPATH_W) '$(srcdir)/view-default.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-default.Tpo $(DEPDIR)/synapse-view-default.Po
#	$(AM_V_CC)source='view-default.c' object='synapse-view-default.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-default.obj `if test -f 'view-default.c'; then $(CYGPATH_W) 'view-default.c'; else $(CYGPATH_W) '$(srcdir)/view-default.c'; fi`

synapse-view-essential.o: view-essential.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-essential.o -MD -MP -MF $(DEPDIR)/synapse-view-essential.Tpo -c -o synapse-view-essential.o `test -f 'view-essential.c' || echo '$(srcdir)/'`view-essential.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-essential.Tpo $(DEPDIR)/synapse-view-essential.Po
#	$(AM_V_CC)source='view-essential.c' object='synapse-view-essential.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-essential.o `test -f 'view-essential.c' || echo '$(srcdir)/'`view-essential.c

synapse-view-essential.obj: view-essential.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-essential.obj -MD -MP -MF $(DEPDIR)/synapse-view-essential.Tpo -c -o synapse-view-essential.obj `if test -f 'view-essential.c'; then $(CYGPATH_W) 'view-essential.c'; else $(CYGPATH_W) '$(srcdir)/view-essential.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-essential.Tpo $(DEPDIR)/synapse-view-essential.Po
#	$(AM_V_CC)source='view-essential.c' object='synapse-view-essential.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-essential.obj `if test -f 'view-essential.c'; then $(CYGPATH_W) 'view-essential.c'; else $(CYGPATH_W) '$(srcdir)/view-essential.c'; fi`

synapse-view-doish.o: view-doish.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-doish.o -MD -MP -MF $(DEPDIR)/synapse-view-doish.Tpo -c -o synapse-view-doish.o `test -f 'view-doish.c' || echo '$(srcdir)/'`view-doish.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-doish.Tpo $(DEPDIR)/synapse-view-doish.Po
#	$(AM_V_CC)source='view-doish.c' object='synapse-view-doish.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-doish.o `test -f 'view-doish.c' || echo '$(srcdir)/'`view-doish.c

synapse-view-doish.obj: view-doish.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-doish.obj -MD -MP -MF $(DEPDIR)/synapse-view-doish.Tpo -c -o synapse-view-doish.obj `if test -f 'view-doish.c'; then $(CYGPATH_W) 'view-doish.c'; else $(CYGPATH_W) '$(srcdir)/view-doish.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-doish.Tpo $(DEPDIR)/synapse-view-doish.Po
#	$(AM_V_CC)source='view-doish.c' object='synapse-view-doish.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-doish.obj `if test -f 'view-doish.c'; then $(CYGPATH_W) 'view-doish.c'; else $(CYGPATH_W) '$(srcdir)/view-doish.c'; fi`

synapse-view-side-doish.o: view-side-doish.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-side-doish.o -MD -MP -MF $(DEPDIR)/synapse-view-side-doish.Tpo -c -o synapse-view-side-doish.o `test -f 'view-side-doish.c' || echo '$(srcdir)/'`view-side-doish.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-side-doish.Tpo $(DEPDIR)/synapse-view-side-doish.Po
#	$(AM_V_CC)source='view-side-doish.c' object='synapse-view-side-doish.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-side-doish.o `test -f 'view-side-doish.c' || echo '$(srcdir)/'`view-side-doish.c

synapse-view-side-doish.obj: view-side-doish.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-side-doish.obj -MD -MP -MF $(DEPDIR)/synapse-view-side-doish.Tpo -c -o synapse-view-side-doish.obj `if test -f 'view-side-doish.c'; then $(CYGPATH_W) 'view-side-doish.c'; else $(CYGPATH_W) '$(srcdir)/view-side-doish.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-side-doish.Tpo $(DEPDIR)/synapse-view-side-doish.Po
#	$(AM_V_CC)source='view-side-doish.c' object='synapse-view-side-doish.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-side-doish.obj `if test -f 'view-side-doish.c'; then $(CYGPATH_W) 'view-side-doish.c'; else $(CYGPATH_W) '$(srcdir)/view-side-doish.c'; fi`

synapse-view-virgilio.o: view-virgilio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-virgilio.o -MD -MP -MF $(DEPDIR)/synapse-view-virgilio.Tpo -c -o synapse-view-virgilio.o `test -f 'view-virgilio.c' || echo '$(srcdir)/'`view-virgilio.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-virgilio.Tpo $(DEPDIR)/synapse-view-virgilio.Po
#	$(AM_V_CC)source='view-virgilio.c' object='synapse-view-virgilio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-virgilio.o `test -f 'view-virgilio.c' || echo '$(srcdir)/'`view-virgilio.c

synapse-view-virgilio.obj: view-virgilio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-view-virgilio.obj -MD -MP -MF $(DEPDIR)/synapse-view-virgilio.Tpo -c -o synapse-view-virgilio.obj `if test -f 'view-virgilio.c'; then $(CYGPATH_W) 'view-virgilio.c'; else $(CYGPATH_W) '$(srcdir)/view-virgilio.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-view-virgilio.Tpo $(DEPDIR)/synapse-view-virgilio.Po
#	$(AM_V_CC)source='view-virgilio.c' object='synapse-view-virgilio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-view-virgilio.obj `if test -f 'view-virgilio.c'; then $(CYGPATH_W) 'view-virgilio.c'; else $(CYGPATH_W) '$(srcdir)/view-virgilio.c'; fi`

synapse-widgets.o: widgets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-widgets.o -MD -MP -MF $(DEPDIR)/synapse-widgets.Tpo -c -o synapse-widgets.o `test -f 'widgets.c' || echo '$(srcdir)/'`widgets.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-widgets.Tpo $(DEPDIR)/synapse-widgets.Po
#	$(AM_V_CC)source='widgets.c' object='synapse-widgets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-widgets.o `test -f 'widgets.c' || echo '$(srcdir)/'`widgets.c

synapse-widgets.obj: widgets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-widgets.obj -MD -MP -MF $(DEPDIR)/synapse-widgets.Tpo -c -o synapse-widgets.obj `if test -f 'widgets.c'; then $(CYGPATH_W) 'widgets.c'; else $(CYGPATH_W) '$(srcdir)/widgets.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-widgets.Tpo $(DEPDIR)/synapse-widgets.Po
#	$(AM_V_CC)source='widgets.c' object='synapse-widgets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-widgets.obj `if test -f 'widgets.c'; then $(CYGPATH_W) 'widgets.c'; else $(CYGPATH_W) '$(srcdir)/widgets.c'; fi`

synapse-widgets-matchlistview.o: widgets-matchlistview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-widgets-matchlistview.o -MD -MP -MF $(DEPDIR)/synapse-widgets-matchlistview.Tpo -c -o synapse-widgets-matchlistview.o `test -f 'widgets-matchlistview.c' || echo '$(srcdir)/'`widgets-matchlistview.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-widgets-matchlistview.Tpo $(DEPDIR)/synapse-widgets-matchlistview.Po
#	$(AM_V_CC)source='widgets-matchlistview.c' object='synapse-widgets-matchlistview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-widgets-matchlistview.o `test -f 'widgets-matchlistview.c' || echo '$(srcdir)/'`widgets-matchlistview.c

synapse-widgets-matchlistview.obj: widgets-matchlistview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-widgets-matchlistview.obj -MD -MP -MF $(DEPDIR)/synapse-widgets-matchlistview.Tpo -c -o synapse-widgets-matchlistview.obj `if test -f 'widgets-matchlistview.c'; then $(CYGPATH_W) 'widgets-matchlistview.c'; else $(CYGPATH_W) '$(srcdir)/widgets-matchlistview.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-widgets-matchlistview.Tpo $(DEPDIR)/synapse-widgets-matchlistview.Po
#	$(AM_V_CC)source='widgets-matchlistview.c' object='synapse-widgets-matchlistview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-widgets-matchlistview.obj `if test -f 'widgets-matchlistview.c'; then $(CYGPATH_W) 'widgets-matchlistview.c'; else $(CYGPATH_W) '$(srcdir)/widgets-matchlistview.c'; fi`

synapse-icon-cache-service.o: icon-cache-service.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-icon-cache-service.o -MD -MP -MF $(DEPDIR)/synapse-icon-cache-service.Tpo -c -o synapse-icon-cache-service.o `test -f 'icon-cache-service.c' || echo '$(srcdir)/'`icon-cache-service.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-icon-cache-service.Tpo $(DEPDIR)/synapse-icon-cache-service.Po
#	$(AM_V_CC)source='icon-cache-service.c' object='synapse-icon-cache-service.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-icon-cache-service.o `test -f 'icon-cache-service.c' || echo '$(srcdir)/'`icon-cache-service.c

synapse-icon-cache-service.obj: icon-cache-service.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-icon-cache-service.obj -MD -MP -MF $(DEPDIR)/synapse-icon-cache-service.Tpo -c -o synapse-icon-cache-service.obj `if test -f 'icon-cache-service.c'; then $(CYGPATH_W) 'icon-cache-service.c'; else $(CYGPATH_W) '$(srcdir)/icon-cache-service.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-icon-cache-service.Tpo $(DEPDIR)/synapse-icon-cache-service.Po
#	$(AM_V_CC)source='icon-cache-service.c' object='synapse-icon-cache-service.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-icon-cache-service.obj `if test -f 'icon-cache-service.c'; then $(CYGPATH_W) 'icon-cache-service.c'; else $(CYGPATH_W) '$(srcdir)/icon-cache-service.c'; fi`

synapse-utils.o: utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-utils.o -MD -MP -MF $(DEPDIR)/synapse-utils.Tpo -c -o synapse-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-utils.Tpo $(DEPDIR)/synapse-utils.Po
#	$(AM_V_CC)source='utils.c' object='synapse-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

synapse-utils.obj: utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-utils.obj -MD -MP -MF $(DEPDIR)/synapse-utils.Tpo -c -o synapse-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-utils.Tpo $(DEPDIR)/synapse-utils.Po
#	$(AM_V_CC)source='utils.c' object='synapse-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

synapse-settings.o: settings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-settings.o -MD -MP -MF $(DEPDIR)/synapse-settings.Tpo -c -o synapse-settings.o `test -f 'settings.c' || echo '$(srcdir)/'`settings.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-settings.Tpo $(DEPDIR)/synapse-settings.Po
#	$(AM_V_CC)source='settings.c' object='synapse-settings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-settings.o `test -f 'settings.c' || echo '$(srcdir)/'`settings.c

synapse-settings.obj: settings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT synapse-settings.obj -MD -MP -MF $(DEPDIR)/synapse-settings.Tpo -c -o synapse-settings.obj `if test -f 'settings.c'; then $(CYGPATH_W) 'settings.c'; else $(CYGPATH_W) '$(srcdir)/settings.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/synapse-settings.Tpo $(DEPDIR)/synapse-settings.Po
#	$(AM_V_CC)source='settings.c' object='synapse-settings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o synapse-settings.obj `if test -f 'settings.c'; then $(CYGPATH_W) 'settings.c'; else $(CYGPATH_W) '$(srcdir)/settings.c'; fi`

tile-view/synapse-abstract-tile-object.o: tile-view/abstract-tile-object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT tile-view/synapse-abstract-tile-object.o -MD -MP -MF tile-view/$(DEPDIR)/synapse-abstract-tile-object.Tpo -c -o tile-view/synapse-abstract-tile-object.o `test -f 'tile-view/abstract-tile-object.c' || echo '$(srcdir)/'`tile-view/abstract-tile-object.c
	$(AM_V_at)$(am__mv) tile-view/$(DEPDIR)/synapse-abstract-tile-object.Tpo tile-view/$(DEPDIR)/synapse-abstract-tile-object.Po
#	$(AM_V_CC)source='tile-view/abstract-tile-object.c' object='tile-view/synapse-abstract-tile-object.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o tile-view/synapse-abstract-tile-object.o `test -f 'tile-view/abstract-tile-object.c' || echo '$(srcdir)/'`tile-view/abstract-tile-object.c

tile-view/synapse-abstract-tile-object.obj: tile-view/abstract-tile-object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT tile-view/synapse-abstract-tile-object.obj -MD -MP -MF tile-view/$(DEPDIR)/synapse-abstract-tile-object.Tpo -c -o tile-view/synapse-abstract-tile-object.obj `if test -f 'tile-view/abstract-tile-object.c'; then $(CYGPATH_W) 'tile-view/abstract-tile-object.c'; else $(CYGPATH_W) '$(srcdir)/tile-view/abstract-tile-object.c'; fi`
	$(AM_V_at)$(am__mv) tile-view/$(DEPDIR)/synapse-abstract-tile-object.Tpo tile-view/$(DEPDIR)/synapse-abstract-tile-object.Po
#	$(AM_V_CC)source='tile-view/abstract-tile-object.c' object='tile-view/synapse-abstract-tile-object.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o tile-view/synapse-abstract-tile-object.obj `if test -f 'tile-view/abstract-tile-object.c'; then $(CYGPATH_W) 'tile-view/abstract-tile-object.c'; else $(CYGPATH_W) '$(srcdir)/tile-view/abstract-tile-object.c'; fi`

tile-view/synapse-tile.o: tile-view/tile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT tile-view/synapse-tile.o -MD -MP -MF tile-view/$(DEPDIR)/synapse-tile.Tpo -c -o tile-view/synapse-tile.o `test -f 'tile-view/tile.c' || echo '$(srcdir)/'`tile-view/tile.c
	$(AM_V_at)$(am__mv) tile-view/$(DEPDIR)/synapse-tile.Tpo tile-view/$(DEPDIR)/synapse-tile.Po
#	$(AM_V_CC)source='tile-view/tile.c' object='tile-view/synapse-tile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o tile-view/synapse-tile.o `test -f 'tile-view/tile.c' || echo '$(srcdir)/'`tile-view/tile.c

tile-view/synapse-tile.obj: tile-view/tile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT tile-view/synapse-tile.obj -MD -MP -MF tile-view/$(DEPDIR)/synapse-tile.Tpo -c -o tile-view/synapse-tile.obj `if test -f 'tile-view/tile.c'; then $(CYGPATH_W) 'tile-view/tile.c'; else $(CYGPATH_W) '$(srcdir)/tile-view/tile.c'; fi`
	$(AM_V_at)$(am__mv) tile-view/$(DEPDIR)/synapse-tile.Tpo tile-view/$(DEPDIR)/synapse-tile.Po
#	$(AM_V_CC)source='tile-view/tile.c' object='tile-view/synapse-tile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o tile-view/synapse-tile.obj `if test -f 'tile-view/tile.c'; then $(CYGPATH_W) 'tile-view/tile.c'; else $(CYGPATH_W) '$(srcdir)/tile-view/tile.c'; fi`

tile-view/synapse-tile-view.o: tile-view/tile-view.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT tile-view/synapse-tile-view.o -MD -MP -MF tile-view/$(DEPDIR)/synapse-tile-view.Tpo -c -o tile-view/synapse-tile-view.o `test -f 'tile-view/tile-view.c' || echo '$(srcdir)/'`tile-view/tile-view.c
	$(AM_V_at)$(am__mv) tile-view/$(DEPDIR)/synapse-tile-view.Tpo tile-view/$(DEPDIR)/synapse-tile-view.Po
#	$(AM_V_CC)source='tile-view/tile-view.c' object='tile-view/synapse-tile-view.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o tile-view/synapse-tile-view.o `test -f 'tile-view/tile-view.c' || echo '$(srcdir)/'`tile-view/tile-view.c

tile-view/synapse-tile-view.obj: tile-view/tile-view.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT tile-view/synapse-tile-view.obj -MD -MP -MF tile-view/$(DEPDIR)/synapse-tile-view.Tpo -c -o tile-view/synapse-tile-view.obj `if test -f 'tile-view/tile-view.c'; then $(CYGPATH_W) 'tile-view/tile-view.c'; else $(CYGPATH_W) '$(srcdir)/tile-view/tile-view.c'; fi`
	$(AM_V_at)$(am__mv) tile-view/$(DEPDIR)/synapse-tile-view.Tpo tile-view/$(DEPDIR)/synapse-tile-view.Po
#	$(AM_V_CC)source='tile-view/tile-view.c' object='tile-view/synapse-tile-view.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o tile-view/synapse-tile-view.obj `if test -f 'tile-view/tile-view.c'; then $(CYGPATH_W) 'tile-view/tile-view.c'; else $(CYGPATH_W) '$(srcdir)/tile-view/tile-view.c'; fi`

tile-view/synapse-wrap-label.o: tile-view/wrap-label.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT tile-view/synapse-wrap-label.o -MD -MP -MF tile-view/$(DEPDIR)/synapse-wrap-label.Tpo -c -o tile-view/synapse-wrap-label.o `test -f 'tile-view/wrap-label.c' || echo '$(srcdir)/'`tile-view/wrap-label.c
	$(AM_V_at)$(am__mv) tile-view/$(DEPDIR)/synapse-wrap-label.Tpo tile-view/$(DEPDIR)/synapse-wrap-label.Po
#	$(AM_V_CC)source='tile-view/wrap-label.c' object='tile-view/synapse-wrap-label.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o tile-view/synapse-wrap-label.o `test -f 'tile-view/wrap-label.c' || echo '$(srcdir)/'`tile-view/wrap-label.c

tile-view/synapse-wrap-label.obj: tile-view/wrap-label.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -MT tile-view/synapse-wrap-label.obj -MD -MP -MF tile-view/$(DEPDIR)/synapse-wrap-label.Tpo -c -o tile-view/synapse-wrap-label.obj `if test -f 'tile-view/wrap-label.c'; then $(CYGPATH_W) 'tile-view/wrap-label.c'; else $(CYGPATH_W) '$(srcdir)/tile-view/wrap-label.c'; fi`
	$(AM_V_at)$(am__mv) tile-view/$(DEPDIR)/synapse-wrap-label.Tpo tile-view/$(DEPDIR)/synapse-wrap-label.Po
#	$(AM_V_CC)source='tile-view/wrap-label.c' object='tile-view/synapse-wrap-label.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(synapse_CFLAGS) $(CFLAGS) -c -o tile-view/synapse-wrap-label.obj `if test -f 'tile-view/wrap-label.c'; then $(CYGPATH_W) 'tile-view/wrap-label.c'; else $(CYGPATH_W) '$(srcdir)/tile-view/wrap-label.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f tile-view/$(DEPDIR)/$(am__dirstamp)
	-rm -f tile-view/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) tile-view/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) tile-view/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


synapse.vala.stamp: $(synapse_VALASOURCES) $(top_builddir)/src/core/synapse-core.vapi $(top_builddir)/src/plugins/plugins.vapi Makefile
	$(AM_V_VALA)$(VALAC) $(synapse_VALAFLAGS) $(VALAFLAGS) -C $(filter %.vala %.c,$^)
	$(AM_V_at)touch $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
